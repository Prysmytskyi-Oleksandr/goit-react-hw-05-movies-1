{"version":3,"file":"static/js/160.ada828e0.chunk.js","mappings":"6OACA,EAAuB,uB,kBC+CvB,EAzCiB,WACf,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GACRE,QAAQC,IAAIL,IAEZM,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,gHAEKC,EAAAA,EAAAA,IAAoBN,GAFzB,OAERO,EAFQ,OAGdR,EAAQQ,GAHM,gDAILC,EAJK,KAILA,SACTN,QAAQC,IAAIK,EAASD,KAAKE,SALZ,yDAAH,qDAQfJ,GACD,GAAE,CAACL,IAEJ,IAAMU,EAAUZ,EAAKa,KAAI,gBAAGX,EAAH,EAAGA,GAAIY,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACvB,0BACGA,IACC,gBACEC,IAAG,0CAAqCD,GACxCE,IAAI,OACJC,MAAM,SAIV,uBAAIL,KACJ,uBAAIC,MAVGb,EADc,IAezB,OACE,+BACE,eAAIkB,UAAWC,EAAf,SACsB,IAAnBT,EAAQU,OAAe,yBAA2BV,KAI1D,C,sLC5CKW,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAmB,mCAAG,sGACVL,EAASM,IAAI,uBADH,uBACzBpB,EADyB,EACzBA,KADyB,kBAE1BA,EAAKqB,SAFqB,2CAAH,qDAKnBC,EAAsB,mCAAG,WAAM7B,GAAN,yFACbqB,EAASM,IAAT,iBAAuB3B,IADV,uBAC5BO,EAD4B,EAC5BA,KAD4B,kBAE7BA,GAF6B,2CAAH,sDAKtBuB,EAAgB,mCAAG,WAAMC,GAAN,yFACPV,EAASM,IAAI,gBAAiB,CACnDH,OAAQ,CACNQ,MAAOD,KAHmB,uBACtBxB,EADsB,EACtBA,KADsB,kBAMvBA,EAAKqB,SANkB,2CAAH,sDAShBtB,EAAmB,mCAAG,WAAMN,GAAN,yFACVqB,EAASM,IAAT,iBAAuB3B,EAAvB,aADU,uBACzBO,EADyB,EACzBA,KADyB,kBAE1BA,EAAKT,MAFqB,2CAAH,sDAKnBmC,EAAsB,mCAAG,WAAMjC,GAAN,yFACbqB,EAASM,IAAT,iBAAuB3B,EAAvB,aADa,uBAC5BO,EAD4B,EAC5BA,KAD4B,kBAE7BA,EAAKqB,SAFwB,2CAAH,qD","sources":["webpack://react-homework-template/./src/pages/CastPage/castPage.module.css?5ee2","pages/CastPage/CastPage.jsx","services/API.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"castPage_list__OcaOG\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport styles from './castPage.module.css';\n\nimport { fetchMoviesCastById } from 'services/API';\n\nconst CastPage = () => {\n  const [cast, setCast] = useState([]);\n  const { id } = useParams();\n  console.log(cast);\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const data = await fetchMoviesCastById(id);\n        setCast(data);\n      } catch ({ response }) {\n        console.log(response.data.message);\n      }\n    };\n    fetchCast();\n  }, [id]);\n\n  const element = cast.map(({ id, name, character, profile_path }) => (\n    <li key={id}>\n      {profile_path && (\n        <img\n          src={`https://image.tmdb.org/t/p/w500/${profile_path}`}\n          alt=\"foto\"\n          width=\"100\"\n        />\n      )}\n\n      <p>{name}</p>\n      <p>{character}</p>\n    </li>\n  ));\n\n  return (\n    <>\n      <ul className={styles.list}>\n        {element.length === 0 ? \"We don't have any foto\" : element}\n      </ul>\n    </>\n  );\n};\n\nexport default CastPage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'e78259dddba5c209adb34bb75b422bf7',\n  },\n});\n\nexport const fetchMoviesTrending = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data.results;\n};\n\nexport const fetchMoviesDetailsById = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const fetchMoviesSerch = async searchName => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query: searchName,\n    },\n  });\n  return data.results;\n};\n\nexport const fetchMoviesCastById = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const fetchMoviesReviewsById = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data.results;\n};\n"],"names":["useState","cast","setCast","id","useParams","console","log","useEffect","fetchCast","fetchMoviesCastById","data","response","message","element","map","name","character","profile_path","src","alt","width","className","styles","length","instance","axios","baseURL","params","api_key","fetchMoviesTrending","get","results","fetchMoviesDetailsById","fetchMoviesSerch","searchName","query","fetchMoviesReviewsById"],"sourceRoot":""}